plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'ca.mcgill.ecse321'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
	testImplementation 'org.mockito:mockito-core:2.+'
	testImplementation 'org.mockito:mockito-junit-jupiter:2.18.3'
	testImplementation 'org.junit.platform:junit-platform-launcher:1.4.1'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // Report always generated after tests run
}

jacocoTestReport {
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude:  [
					'ca/mcgill/ecse321/GSSS/controller/*',
					'ca/mcgill/ecse321/GSSS/dto/*'
			])
		}))
	}
	dependsOn test
}

jacocoTestCoverageVerification {
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude:  [
					'ca/mcgill/ecse321/GSSS/controller/*',
					'ca/mcgill/ecse321/GSSS/dto/*'
			])
		}))
	}

	violationRules {
		rule {
			limit {
				minimum = 0.75 // 75 % Minimum coverage
			}
		}
	}
}